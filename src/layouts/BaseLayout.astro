---
import Navbar from "../components/Navbar.astro";
import CornerButton from "../components/CornerButton.astro";

const { title = "Aromia's Homepage" } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>{title}</title>
    <meta name="description" content="Hiiii, this is Aromia~" />
    <meta name="keywords" content="aromia arom1a homepage blog" />
    <meta name="author" content="Aromia" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />

    <meta name="og:type" content="website" />
    <meta name="og:title" content={title} />
    <meta name="og:url" content="https://arom1a.com" />
    <meta name="og:description" content="Hiiii, this is Aromia~" />
    <meta name="og:image" content="https://arom1a.com/aromia.png" />

    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:site:id" content="@arom1a" />
    <meta name="twitter:description" content="Hiiii, this is Aromia~" />
    <meta name="twitter:image" content="https://arom1a.com/aromia.png" />

    <link rel="stylesheet" href="/global.css" />
  </head>
  <body class="bg-bgMain">
    <div
      class="fixed top-0 -z-[9999] h-screen w-screen bg-[radial-gradient(80%_110%_at_50%_10%,rgba(var(--bgMain))_40%,rgba(var(--bgSurrounding))_100%)]"
    >
    </div>

    <div class="p-4 md:grid md:grid-cols-8 md:p-0 md:px-0">
      <Navbar />

      <div
        class="bg-primary/40 px-4 pb-2 shadow-2xl shadow-textPrimary/50 backdrop-blur-2xl md:col-span-5 md:min-h-screen xl:col-span-3"
      >
        <slot />
      </div>
      <div class="m-2 text-textDim md:mt-auto">
        &copy 2024 - 2025 Aromia. <br /> All right reserved.
      </div>
    </div>

    <CornerButton />

    <script is:inline>
      const registerServiceWorker = async () => {
        if ("serviceWorker" in navigator) {
          try {
            const registration = await navigator.serviceWorker.register("/sw.js", {
              scope: "/bookmarks",
            });
            if (registration.installing) {
              console.log("Service worker installing");
            } else if (registration.waiting) {
              console.log("Service worker installed");
            } else if (registration.active) {
              console.log("Service worker active");
            }
            console.log("The scope of the service worker is " + registration.scope);
          } catch (error) {
            console.error(`Registration failed with ${error}`);
          }
        }
      };

      registerServiceWorker();
    </script>
  </body>
</html>
