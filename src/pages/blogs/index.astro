---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

interface Props {
  language: "en" | "zh";
}

const { language } = Astro.props;

const enBlogEntries = await getCollection("blogs", ({ slug }) => {
  return slug.startsWith("en/");
});
const zhBlogEntries = await getCollection("blogs", ({ slug }) => {
  return slug.startsWith("zh/");
});

let displayBlogEntries = enBlogEntries;
if (language == "en") {
  const enIds = enBlogEntries.map((entry) => {
    return entry.data.id;
  });

  zhBlogEntries.forEach((entry) => {
    if (!enIds.includes(entry.data.id)) {
      entry.data.lackTranslation = true;
      displayBlogEntries.push(entry);
    }
  });

  console.log(displayBlogEntries);
} else if (language == "zh") {
  displayBlogEntries = zhBlogEntries;

  const zhIds = zhBlogEntries.map((entry) => {
    return entry.data.id;
  });

  enBlogEntries.forEach((entry) => {
    if (!zhIds.includes(entry.data.id)) {
      entry.data.lackTranslation = true;
      displayBlogEntries.push(entry);
    }
  });
}

const monthMapToEntry = new Map();
displayBlogEntries.forEach((entry) => {
  const yearAndMonth = // return yyyymmdd
    entry.data.pubDate.getFullYear().toString() +
    (entry.data.pubDate.getMonth().toString().length < 2
      ? "0" + (entry.data.pubDate.getMonth() + 1).toString()
      : entry.data.pubDate.getMonth().toString());
  const date =
    entry.data.pubDate.getDate().toString().length < 2
      ? "0" + entry.data.pubDate.getDate().toString()
      : entry.data.pubDate.getDate().toString();

  monthMapToEntry.set(
    yearAndMonth,
    monthMapToEntry.get(yearAndMonth) ? monthMapToEntry.get(yearAndMonth).concat(entry) : [entry]
  );
});

const pubMonths = [...monthMapToEntry.keys()].sort((a, b) => b - a);

const totalArticleNum = enBlogEntries.length + zhBlogEntries.length;
const totalBlogNum = displayBlogEntries.length;
---

<BaseLayout>
  <div>
    {
      pubMonths.map((month) => (
        <li>
          <div class="monthdiv(year) text-3xl text-blue-400">{month}</div>
          {monthMapToEntry.get(month).map((entry: (typeof enBlogEntries)[0]) => (
            <p>
              <a
                href={`blogs/${entry.slug}`}
                class={`text-xl ${entry.data.lackTranslation ? "text-purple-300" : ""}`}
              >
                {entry.data.title}
              </a>
              {entry.slug}
            </p>
          ))}
        </li>
      ))
    }
  </div>
</BaseLayout>
