---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

function numToMonth(num: string) {
  let map = [
    "Jan.",
    "Feb.",
    "Mar.",
    "Apr.",
    "May.",
    "Jun.",
    "Jul.",
    "Aug.",
    "Sep.",
    "Oct.",
    "Nov.",
    "Dec.",
  ];

  return map[parseInt(num)];
}

const enBlogEntries = await getCollection("blogs", ({ slug }) => {
  return slug.startsWith("en/");
});
const zhBlogEntries = await getCollection("blogs", ({ slug }) => {
  return slug.startsWith("zh/");
});
const totalArticleNum = enBlogEntries.length + zhBlogEntries.length;

let enDisplayBlogEntries = enBlogEntries;
const enIds = enBlogEntries.map((entry) => {
  return entry.data.id;
});
zhBlogEntries.forEach((entry) => {
  if (!enIds.includes(entry.data.id)) {
    entry.data.lackEnTranslation = true;
    enDisplayBlogEntries.push(entry);
  }
});

let zhDisplayBlogEntries = zhBlogEntries;
const zhIds = zhBlogEntries.map((entry) => {
  return entry.data.id;
});
enBlogEntries.forEach((entry) => {
  if (!zhIds.includes(entry.data.id)) {
    entry.data.lackZhTranslation = true;
    zhDisplayBlogEntries.push(entry);
  }
});

type BlogEntry = (typeof enBlogEntries)[0];
type BlogEntries = BlogEntry[];

// const enMonthMapToEntry: Record<string, typeof enBlogEntries> = {};
const enMonthMapToEntry: Map<string, BlogEntries> = new Map();
enDisplayBlogEntries.forEach((entry) => {
  const yearAndMonth = // return yyyymm
    entry.data.pubDate.getFullYear().toString() +
    (entry.data.pubDate.getMonth().toString().length < 2
      ? "0" + entry.data.pubDate.getMonth().toString()
      : entry.data.pubDate.getMonth().toString());
  const date =
    entry.data.pubDate.getDate().toString().length < 2
      ? "0" + entry.data.pubDate.getDate().toString()
      : entry.data.pubDate.getDate().toString();

  if (!enMonthMapToEntry.get(yearAndMonth)) {
    enMonthMapToEntry.set(yearAndMonth, [entry]);
  } else {
    enMonthMapToEntry.get(yearAndMonth)?.push(entry);
  }
});

const zhMonthMapToEntry: Map<string, BlogEntries> = new Map();
zhDisplayBlogEntries.forEach((entry) => {
  const yearAndMonth = // return yyyymm
    entry.data.pubDate.getFullYear().toString() +
    (entry.data.pubDate.getMonth().toString().length < 2
      ? "0" + entry.data.pubDate.getMonth().toString()
      : entry.data.pubDate.getMonth().toString());
  const date =
    entry.data.pubDate.getDate().toString().length < 2
      ? "0" + entry.data.pubDate.getDate().toString()
      : entry.data.pubDate.getDate().toString();

  if (!zhMonthMapToEntry.get(yearAndMonth)) {
    zhMonthMapToEntry.set(yearAndMonth, [entry]);
  } else {
    zhMonthMapToEntry.get(yearAndMonth)?.push(entry);
  }
});

console.log(enMonthMapToEntry);

const pubMonths = [...enMonthMapToEntry.keys()].sort((a, b) => parseInt(b) - parseInt(a));

const totalBlogNum = enDisplayBlogEntries.length;
---

<BaseLayout>
  <ul id="en-list">
    {
      pubMonths.map((month) => (
        <li class="mb-3">
          <div class="flex items-baseline text-textTheme">
            <div class="mr-2 text-2xl">{month.slice(0, 4)}</div>
            <div class="">{numToMonth(month.slice(4, 6))}</div>
          </div>

          {enMonthMapToEntry
            .get(month)
            ?.sort((a, b) => a.data.pubDate.getTime() - b.data.pubDate.getTime())
            .map((entry: (typeof enBlogEntries)[0]) => (
              <div
                class={`flex items-baseline ${entry.data.lackEnTranslation ? "text-slate-600" : "text-textPrimary"}`}
              >
                <a href={`/blogs/${entry.slug}`} class="text-xl decoration-2 hover:underline">
                  {entry.data.title}
                </a>
                <div
                  class={`mx-3 h-0 flex-grow border-b-2 border-dotted pt-4 ${entry.data.lackEnTranslation ? "border-slate-600" : "border-textPrimary"}`}
                />
                <span class="">{entry.data.pubDate.toDateString().slice(4, 10)}</span>
              </div>
            ))}
        </li>
      ))
    }
  </ul>

  <ul id="zh-list">
    {
      pubMonths.map((month) => (
        <li class="mb-3">
          <div class="flex items-baseline text-textTheme">
            <div class="mr-2 text-2xl">{month.slice(0, 4)}</div>
            <div class="">{numToMonth(month.slice(4, 6))}</div>
          </div>

          {zhMonthMapToEntry
            .get(month)
            ?.sort((a, b) => a.data.pubDate.getTime() - b.data.pubDate.getTime())
            .map((entry: (typeof enBlogEntries)[0]) => (
              <div
                class={`flex items-baseline ${entry.data.lackZhTranslation ? "text-slate-600" : "text-textPrimary"}`}
              >
                <a href={`/blogs/${entry.slug}`} class="text-xl decoration-2 hover:underline">
                  {entry.data.title}
                </a>
                <div
                  class={`mx-3 h-0 flex-grow border-b-2 border-dotted pt-4 ${entry.data.lackZhTranslation ? "border-slate-600" : "border-textPrimary"}`}
                />
                <span class="">{entry.data.pubDate.toDateString().slice(4, 10)}</span>
              </div>
            ))}
        </li>
      ))
    }
  </ul>

  <div class="mt-10 flex justify-between text-gray-500">
    <div>Total article count: {totalArticleNum}</div>
    <div>Total blog count: {totalBlogNum}</div>
  </div>
</BaseLayout>
